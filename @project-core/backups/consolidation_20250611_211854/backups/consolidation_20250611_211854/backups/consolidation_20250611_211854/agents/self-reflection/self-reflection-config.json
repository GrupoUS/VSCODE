{
  "agent_config": {
    "agent_id": "self_reflection",
    "name": "Self-Reflection & Continuous Improvement Agent",
    "version": "1.0.0",
    "description": "AI agent that evaluates and improves its own responses and system performance (PraisonAI-inspired)",
    "model_config": {
      "model": "google/gemini-2.5-pro-exp-03-25",
      "provider": "openrouter",
      "api_key_env": "OPENROUTER_API_KEY",
      "temperature": 0.4,
      "max_tokens": 6144,
      "context_window": 200000,
      "supports_thinking": false,
      "supports_vision": false,
      "supports_function_calling": true
    },
    "specialization": {
      "primary_domains": [
        "performance_analysis",
        "quality_assessment",
        "improvement_identification",
        "pattern_recognition",
        "system_optimization"
      ],
      "secondary_domains": [
        "error_analysis",
        "efficiency_measurement",
        "user_satisfaction_tracking",
        "knowledge_gap_identification"
      ],
      "complexity_range": {
        "min": 3,
        "max": 8,
        "optimal": [4, 6]
      }
    },
    "capabilities": {
      "self_evaluation": {
        "response_quality_assessment": true,
        "accuracy_measurement": true,
        "completeness_evaluation": true,
        "efficiency_analysis": true,
        "user_satisfaction_prediction": true
      },
      "improvement_identification": {
        "weakness_detection": true,
        "optimization_opportunities": true,
        "knowledge_gaps": true,
        "process_inefficiencies": true,
        "integration_issues": true
      },
      "learning_mechanisms": {
        "pattern_extraction": true,
        "success_factor_analysis": true,
        "failure_root_cause_analysis": true,
        "best_practices_identification": true,
        "continuous_adaptation": true
      }
    },
    "mcp_integration": {
      "required_servers": [
        "think_think-mcp-server",
        "mcp-shrimp-task-manager"
      ],
      "optional_servers": [
        "sequentialthinking_tools_mcp-sequentialthinking-tools"
      ],
      "tool_permissions": {
        "analysis": ["think", "analyze_task"],
        "coordination": ["plan_task", "list_tasks"],
        "reflection": ["sequentialthinking"]
      }
    },
    "reflection_framework": {
      "evaluation_dimensions": [
        "task_completion_quality",
        "response_accuracy",
        "efficiency_metrics",
        "user_satisfaction",
        "learning_effectiveness",
        "system_performance"
      ],
      "improvement_strategies": [
        "knowledge_base_enhancement",
        "process_optimization",
        "tool_configuration_tuning",
        "response_pattern_refinement",
        "error_prevention_strengthening"
      ],
      "learning_cycles": [
        "immediate_reflection",
        "session_analysis",
        "daily_review",
        "weekly_optimization",
        "monthly_evolution"
      ]
    },
    "assessment_criteria": {
      "quality_metrics": {
        "accuracy": {
          "weight": 0.30,
          "measurement": "correctness_of_information",
          "target": 0.95
        },
        "completeness": {
          "weight": 0.25,
          "measurement": "requirement_fulfillment",
          "target": 0.90
        },
        "efficiency": {
          "weight": 0.20,
          "measurement": "time_and_resource_usage",
          "target": 0.85
        },
        "clarity": {
          "weight": 0.15,
          "measurement": "communication_effectiveness",
          "target": 0.90
        },
        "innovation": {
          "weight": 0.10,
          "measurement": "creative_problem_solving",
          "target": 0.75
        }
      },
      "performance_indicators": [
        "task_success_rate",
        "user_satisfaction_score",
        "response_time",
        "token_efficiency",
        "error_frequency",
        "learning_velocity"
      ]
    },
    "improvement_mechanisms": {
      "immediate_adjustments": {
        "response_refinement": true,
        "approach_modification": true,
        "tool_selection_optimization": true,
        "context_enhancement": true
      },
      "systematic_improvements": {
        "knowledge_base_updates": true,
        "process_refinements": true,
        "configuration_optimizations": true,
        "pattern_library_enhancements": true
      },
      "evolutionary_changes": {
        "capability_expansion": true,
        "integration_enhancements": true,
        "workflow_evolution": true,
        "intelligence_advancement": true
      }
    },
    "performance_metrics": {
      "self_assessment_accuracy": 0.85,
      "improvement_implementation_rate": 0.80,
      "learning_effectiveness": 0.75,
      "system_optimization_impact": 0.70
    },
    "learning_system": {
      "reflection_frequency": "after_each_task",
      "analysis_depth": "comprehensive",
      "improvement_tracking": true,
      "pattern_evolution": true,
      "memory_integration": {
        "read_from": "@project-core/memory/",
        "write_to": "@project-core/memory/self-reflection/",
        "reflection_log": "@project-core/memory/self-reflection/reflection-log.json",
        "improvement_history": "@project-core/memory/self-reflection/improvement-history.json",
        "pattern_library": "@project-core/memory/learning/reflection-patterns.json"
      }
    }
  },
  "operational_rules": {
    "reflection_process": {
      "evaluate_task_performance": true,
      "identify_improvement_areas": true,
      "generate_optimization_recommendations": true,
      "implement_immediate_improvements": true,
      "document_learnings": true
    },
    "quality_assurance": {
      "validate_self_assessments": true,
      "cross_reference_with_metrics": true,
      "ensure_objective_evaluation": true,
      "prevent_over_optimization": true
    },
    "continuous_evolution": {
      "adapt_reflection_criteria": true,
      "evolve_assessment_methods": true,
      "refine_improvement_strategies": true,
      "enhance_learning_mechanisms": true
    }
  }
}
