# üöÄ VIBECODE SYSTEM V4.0 - Configura√ß√£o de Sincroniza√ß√£o Autom√°tica
# Script para configurar sincroniza√ß√£o autom√°tica com GitHub

param(
    [switch]$Install,
    [switch]$Uninstall,
    [int]$IntervalMinutes = 30
)

$ScriptPath = Join-Path $PSScriptRoot "sync-github-auto.ps1"
$TaskName = "VIBECODE-GitHub-AutoSync"

Write-Host "üöÄ VIBECODE SYSTEM V4.0 - Configura√ß√£o de Sincroniza√ß√£o Autom√°tica" -ForegroundColor Cyan
Write-Host "=================================================================" -ForegroundColor Cyan

if ($Install) {
    Write-Host "`nüìã Configurando tarefa agendada..." -ForegroundColor Yellow

    # Verificar se o script existe
    if (-not (Test-Path $ScriptPath)) {
        Write-Error "‚ùå Script de sincroniza√ß√£o n√£o encontrado: $ScriptPath"
        exit 1
    }

    # Remover tarefa existente se houver
    $existingTask = Get-ScheduledTask -TaskName $TaskName -ErrorAction SilentlyContinue
    if ($existingTask) {
        Write-Host "üóëÔ∏è Removendo tarefa existente..." -ForegroundColor Yellow
        Unregister-ScheduledTask -TaskName $TaskName -Confirm:$false
    }

    # Criar nova tarefa agendada
    $action = New-ScheduledTaskAction -Execute "PowerShell.exe" -Argument "-ExecutionPolicy Bypass -File `"$ScriptPath`""
    $trigger = New-ScheduledTaskTrigger -Once -At (Get-Date).AddMinutes(1) -RepetitionInterval (New-TimeSpan -Minutes $IntervalMinutes) -RepetitionDuration (New-TimeSpan -Days 3650)
    $settings = New-ScheduledTaskSettingsSet -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries -StartWhenAvailable -ExecutionTimeLimit (New-TimeSpan -Hours 1)
    $principal = New-ScheduledTaskPrincipal -UserId $env:USERNAME -LogonType Interactive -RunLevel Highest

    Register-ScheduledTask -TaskName $TaskName -Action $action -Trigger $trigger -Settings $settings -Principal $principal -Description "Sincroniza√ß√£o autom√°tica do VIBECODE SYSTEM V4.0 com GitHub"

    Write-Host "‚úÖ Tarefa agendada criada com sucesso!" -ForegroundColor Green
    Write-Host "üìÖ Intervalo: $IntervalMinutes minutos" -ForegroundColor Green
    Write-Host "üìù Nome da tarefa: $TaskName" -ForegroundColor Green

    # Testar execu√ß√£o
    Write-Host "`nüß™ Testando sincroniza√ß√£o..." -ForegroundColor Yellow
    & $ScriptPath -DryRun

    Write-Host "`nüéâ Configura√ß√£o conclu√≠da!" -ForegroundColor Cyan
    Write-Host "A sincroniza√ß√£o autom√°tica est√° ativa e ser√° executada a cada $IntervalMinutes minutos." -ForegroundColor Green

} elseif ($Uninstall) {
    Write-Host "`nüóëÔ∏è Removendo sincroniza√ß√£o autom√°tica..." -ForegroundColor Yellow

    $existingTask = Get-ScheduledTask -TaskName $TaskName -ErrorAction SilentlyContinue
    if ($existingTask) {
        Unregister-ScheduledTask -TaskName $TaskName -Confirm:$false
        Write-Host "‚úÖ Tarefa agendada removida com sucesso!" -ForegroundColor Green
    } else {
        Write-Host "‚ÑπÔ∏è Nenhuma tarefa agendada encontrada" -ForegroundColor Yellow
    }

} else {
    Write-Host "`nüìã Status da Sincroniza√ß√£o Autom√°tica" -ForegroundColor Yellow
    Write-Host "====================================" -ForegroundColor Yellow

    $existingTask = Get-ScheduledTask -TaskName $TaskName -ErrorAction SilentlyContinue
    if ($existingTask) {
        Write-Host "‚úÖ Sincroniza√ß√£o autom√°tica: ATIVA" -ForegroundColor Green
        Write-Host "üìù Nome da tarefa: $TaskName" -ForegroundColor White
        Write-Host "üìÖ Pr√≥xima execu√ß√£o: $($existingTask.Triggers[0].StartBoundary)" -ForegroundColor White
        Write-Host "üîÑ Estado: $($existingTask.State)" -ForegroundColor White

        # Mostrar √∫ltimas execu√ß√µes
        Write-Host "`nüìä Hist√≥rico de execu√ß√µes:" -ForegroundColor Yellow
        Get-WinEvent -FilterHashtable @{LogName='Microsoft-Windows-TaskScheduler/Operational'; ID=201} -MaxEvents 5 -ErrorAction SilentlyContinue |
            Where-Object { $_.Message -like "*$TaskName*" } |
            ForEach-Object {
                Write-Host "   $($_.TimeCreated): $($_.LevelDisplayName)" -ForegroundColor White
            }
    } else {
        Write-Host "‚ùå Sincroniza√ß√£o autom√°tica: INATIVA" -ForegroundColor Red
    }

    Write-Host "`nüìñ Comandos dispon√≠veis:" -ForegroundColor Cyan
    Write-Host "   .\setup-auto-sync.ps1 -Install              # Instalar sincroniza√ß√£o autom√°tica" -ForegroundColor White
    Write-Host "   .\setup-auto-sync.ps1 -Install -IntervalMinutes 15  # Instalar com intervalo personalizado" -ForegroundColor White
    Write-Host "   .\setup-auto-sync.ps1 -Uninstall            # Remover sincroniza√ß√£o autom√°tica" -ForegroundColor White
    Write-Host "   .\sync-github-auto.ps1                      # Executar sincroniza√ß√£o manual" -ForegroundColor White
    Write-Host "   .\sync-github-auto.ps1 -DryRun              # Testar sincroniza√ß√£o (sem executar)" -ForegroundColor White
}

Write-Host "`n=================================================================" -ForegroundColor Cyan
